Kairam Konda Sravani
Batch-49
CAPG49LSRB457

1) What is difference in Overloading and Over riding?
     When two or more methods in the same class have the same name but different parameters, it's called Overloading and When the method       signature (name and parameters) are the same in the superclass and the child class, it's called Overriding.

2)If both the functions are statis can we over ride
   No we cannot override static method because overriding is based on dynamic binding.

3) Diffference bew Final , Finally and Finalize?
    final is the keyword and access modifier which is used to apply restrictions on a class, method or variable.	
    finally is the block in Java Exception Handling to execute the important code whether the exception occurs or not.	
    finalize is the method in Java which is used to perform clean up processing just before object is garbage collected.

4)What are maker Interfaces?
   A marker interface is an interface that has no methods or constants inside it. It provides run-time type information about objects, so the compiler    and JVM have additional information about the object.

5)What is Singleton class?
    A Singleton class in Java allows only one instance to be created and provides global access to all other classes through this single object or      instance. Similar to the static fields, The instance fields(if any) of a class will occur only for a single time.

6)What is the underlying Data structure for Arraylist and Linkedlist?
    Linear data structure is the underlying data structure of array list and linked list.

7).What is hash collision?
     Hash collison is a situation where two or more key objects produce the same final hash value and hence point to the same bucket location or      array index.

8)What are lambda Expressions?
    A lambda expression is a short block of code which takes in parameters and returns a value. Lambda expressions are similar to methods, but     they do not need a name and they can be implemented right in the body of a method.

9)Whats is functional interface?
    functional interfaces have an informative @FunctionalInterface annotation. This clearly communicates the purpose of the interface, and also allows     a compiler to generate an error if the annotated interface does not satisfy the conditions.

10)What are optional classes in Java 8?
     Optional is a container object used to contain not-null objects. Optional object is used to represent null with absent value. This class has various      utility methods to facilitate code to handle values as 'available' or 'not available' instead of checking null values.

11)Whats is factory design pattern and Adapter and difference bew them?
      Factory design:
      With the Factory pattern, you produce instances of implementations of a particular interface.
      Adapter:
      Adapter pattern is used after the application components are designed so that we can use them without modifying the source code.

12)What are Solid principles?
     SOLID is one of the most popular sets of design principles in object-oriented software development. Itâ€™s a mnemonic acronym for the following      five design principles:

     Single Responsibility Principle
     Open/Closed Principle
     Liskov Substitution Principle
     Interface Segregation Principle
     Dependency Inversion

13)What does @component and @scan do in Sprinboot annaotation?
     Component is an annotation that allows Spring to automatically detect our custom beans. In other words, without having to write any explicit code,      Spring will: Scan our application for classes annotated with @Component. Instantiate them and inject any specified dependencies into them.

14).Whats is the Diference bew JPA , Hibernate and ORM?
     JPA : It is not an implementation. It is only a Java specification.	
     Hibernate: Hibernate is an implementation of JPA. Hence, the common standard which is given by JPA is followed by Hibernate.
     ORM: Object-relational mapping (ORM) is a programming technique in which a metadata descriptor is used to connect object code to a      relational database.

15)What is indexing in Database
      Indexing is a way to optimize the performance of a database by minimizing the number of disk accesses required when a query is processed. It       is a data structure technique which is used to quickly locate and access the data in a database. 

16)Types Of Driversin jdbc?
     JDBC-ODBC bridge driver
     Native-API driver
     Network Protocol driver
     Thin driver

17).What is difrence bew @component and @bean and @service?
     @Component is an annotation that allows Spring to automatically detect our custom beans. In other words, without having to write any explicit      code.
     @service is used to mark the class as a service provider. So overall @Service annotation is used with classes that provide some business      functionalities. Spring context will autodetect these classes when annotation-based configuration and classpath scanning is used. Procedure.      Create a Simple Spring Boot Project.
     @Bean annotation tells that a method produces a bean to be managed by the Spring container. It is a method-level annotation. During Java      configuration ( @Configuration ), the method is executed and its return value is registered as a bean within a BeanFactory 

18)What is difference bew SOAP and restful services techinically?
     Simple object access protocol (SOAP) is an official protocol maintained by the World Wide Web Consortium (W3C). The main difference is that SOAP is a protocol while REST is not. Typically, an API will adhere to either REST or SOAP, depending on the use case and preferences of the      developer

19)Difference in POST and PUT?
     PUT method is call when you have to modify a single resource, which is already a part of resource collection. POST method is call when you  have to add a child resource under resources collection.

20)Is react uni directional or Bi directional?
     React, a Javascript library, uses unidirectional data flow. The data from the parent is known as props. You can only transfer data from parent to    child and not vice versa.
